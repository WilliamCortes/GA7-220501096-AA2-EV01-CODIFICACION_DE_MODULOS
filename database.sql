-- MySQL Script generated by MySQL Workbench
-- jue 19 oct 2023 13:29:23
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema default_schema
-- -----------------------------------------------------
SHOW WARNINGS;
-- -----------------------------------------------------
-- Schema VirtualWaiterDB
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `VirtualWaiterDB` ;

-- -----------------------------------------------------
-- Schema VirtualWaiterDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `VirtualWaiterDB` ;
SHOW WARNINGS;
USE `VirtualWaiterDB` ;

-- -----------------------------------------------------
-- Table `VirtualWaiterDB`.`clients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VirtualWaiterDB`.`clients` (
                                                           `idClient` INT NOT NULL AUTO_INCREMENT,
                                                           `idDocumentType` INT NOT NULL,
                                                           `firtsName` VARCHAR(45) NOT NULL,
    `lastName` VARCHAR(45) NOT NULL,
    `documentNumber` VARCHAR(20) NOT NULL,
    `phoneNumber` VARCHAR(20) NOT NULL,
    `points` INT ZEROFILL NULL DEFAULT NULL,
    `birthDate` DATE NULL DEFAULT NULL,
    PRIMARY KEY (`idClient`),
    CONSTRAINT `fk_cli_idDocumentType`
    FOREIGN KEY (`idDocumentType`)
    REFERENCES `VirtualWaiterDB`.`documentTypes` (`idDocumentType`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `idCustomer_UNIQUE` ON `VirtualWaiterDB`.`clients` (`idClient` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `documentNumber_UNIQUE` ON `VirtualWaiterDB`.`clients` (`documentNumber` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `phoneNumber_UNIQUE` ON `VirtualWaiterDB`.`clients` (`phoneNumber` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_cli_idDocumentType` ON `VirtualWaiterDB`.`clients` (`idDocumentType` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `VirtualWaiterDB`.`contractTypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VirtualWaiterDB`.`contractTypes` (
                                                                 `idContractType` INT NOT NULL AUTO_INCREMENT,
                                                                 `type` VARCHAR(45) NOT NULL,
    PRIMARY KEY (`idContractType`))
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `idContractType_UNIQUE` ON `VirtualWaiterDB`.`contractTypes` (`idContractType` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `contractType_UNIQUE` ON `VirtualWaiterDB`.`contractTypes` (`type` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `VirtualWaiterDB`.`documentTypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VirtualWaiterDB`.`documentTypes` (
                                                                 `idDocumentType` INT NOT NULL AUTO_INCREMENT,
                                                                 `type` VARCHAR(5) NOT NULL,
    PRIMARY KEY (`idDocumentType`))
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `type_UNIQUE` ON `VirtualWaiterDB`.`documentTypes` (`type` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `idDocumentType_UNIQUE` ON `VirtualWaiterDB`.`documentTypes` (`idDocumentType` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `VirtualWaiterDB`.`employees`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VirtualWaiterDB`.`employees` (
                                                             `idEmployee` INT NOT NULL AUTO_INCREMENT,
                                                             `idDocumentType` INT NOT NULL,
                                                             `idJobTilte` INT NOT NULL,
                                                             `idContractType` INT NOT NULL,
                                                             `idEmployeeStatus` INT NOT NULL,
                                                             `idWorkSchedule` INT NOT NULL,
                                                             `firtsName` VARCHAR(45) NOT NULL,
    `lastName` VARCHAR(45) NOT NULL,
    `documentNumber` VARCHAR(20) NOT NULL,
    `phoneNumber` VARCHAR(20) NOT NULL,
    `birthDate` DATE NULL DEFAULT NULL,
    `password` VARCHAR(10) NOT NULL,
    `salary` INT NOT NULL,
    `admissionDate` DATE NOT NULL,
    PRIMARY KEY (`idEmployee`),
    CONSTRAINT `fk_emp_idDocumentType`
    FOREIGN KEY (`idDocumentType`)
    REFERENCES `VirtualWaiterDB`.`documentTypes` (`idDocumentType`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_emp_idJobTilte`
    FOREIGN KEY (`idJobTilte`)
    REFERENCES `VirtualWaiterDB`.`jobTiltes` (`idJobTilte`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_emp_idContractType`
    FOREIGN KEY (`idContractType`)
    REFERENCES `VirtualWaiterDB`.`contractTypes` (`idContractType`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_emp_idEmployeeStatus`
    FOREIGN KEY (`idEmployeeStatus`)
    REFERENCES `VirtualWaiterDB`.`employeeStatus` (`idEmployeeStatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_emp_idWorkSchedule`
    FOREIGN KEY (`idWorkSchedule`)
    REFERENCES `VirtualWaiterDB`.`workSchedules` (`idWorkSchedule`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `idCustomer_UNIQUE` ON `VirtualWaiterDB`.`employees` (`idEmployee` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `documentNumber_UNIQUE` ON `VirtualWaiterDB`.`employees` (`documentNumber` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_emp_idDocumentType` ON `VirtualWaiterDB`.`employees` (`idDocumentType` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_emp_idJobTilte` ON `VirtualWaiterDB`.`employees` (`idJobTilte` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_emp_idContractType` ON `VirtualWaiterDB`.`employees` (`idContractType` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_emp_idEmployeeStatus` ON `VirtualWaiterDB`.`employees` (`idEmployeeStatus` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_emp_idWorkSchedule` ON `VirtualWaiterDB`.`employees` (`idWorkSchedule` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `VirtualWaiterDB`.`employeeStatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VirtualWaiterDB`.`employeeStatus` (
                                                                  `idEmployeeStatus` INT NOT NULL AUTO_INCREMENT,
                                                                  `status` VARCHAR(20) NOT NULL,
    PRIMARY KEY (`idEmployeeStatus`))
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `idEmployeeStatus_UNIQUE` ON `VirtualWaiterDB`.`employeeStatus` (`idEmployeeStatus` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `status_UNIQUE` ON `VirtualWaiterDB`.`employeeStatus` (`status` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `VirtualWaiterDB`.`invoices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VirtualWaiterDB`.`invoices` (
                                                            `idInvoices` INT NOT NULL AUTO_INCREMENT,
                                                            `number` VARCHAR(10) NOT NULL,
    `idOrder` INT NOT NULL,
    `idClient` INT NOT NULL,
    `idPaymentMethod` INT NOT NULL,
    `idInvoiceStatus` INT NOT NULL,
    `paymentDate` DATE NULL DEFAULT NULL,
    PRIMARY KEY (`idInvoices`, `number`),
    CONSTRAINT `fk_inv_idOrder`
    FOREIGN KEY (`idOrder`)
    REFERENCES `VirtualWaiterDB`.`orders` (`idOrders`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_inv_idClient`
    FOREIGN KEY (`idClient`)
    REFERENCES `VirtualWaiterDB`.`clients` (`idClient`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_inv_idPaymentMethod`
    FOREIGN KEY (`idPaymentMethod`)
    REFERENCES `VirtualWaiterDB`.`paymentMethod` (`idPaymentMethod`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_inv_idInvoiceStatus`
    FOREIGN KEY (`idInvoiceStatus`)
    REFERENCES `VirtualWaiterDB`.`invoiceStatus` (`idInvoiceStatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `idInvoices_UNIQUE` ON `VirtualWaiterDB`.`invoices` (`idInvoices` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `number_UNIQUE` ON `VirtualWaiterDB`.`invoices` (`number` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `idOrder_UNIQUE` ON `VirtualWaiterDB`.`invoices` (`idOrder` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `idClient_idx` ON `VirtualWaiterDB`.`invoices` (`idClient` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `idPaymentMethod_idx` ON `VirtualWaiterDB`.`invoices` (`idPaymentMethod` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `idInvoiceStatus_idx` ON `VirtualWaiterDB`.`invoices` (`idInvoiceStatus` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_inv_idOrder` ON `VirtualWaiterDB`.`invoices` (`idOrder` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_inv_idClient` ON `VirtualWaiterDB`.`invoices` (`idClient` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_inv_idPaymentMethod` ON `VirtualWaiterDB`.`invoices` (`idPaymentMethod` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_inv_idInvoiceStatus` ON `VirtualWaiterDB`.`invoices` (`idInvoiceStatus` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `VirtualWaiterDB`.`invoiceStatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VirtualWaiterDB`.`invoiceStatus` (
                                                                 `idInvoiceStatus` INT NOT NULL AUTO_INCREMENT,
                                                                 `status` VARCHAR(20) NOT NULL,
    PRIMARY KEY (`idInvoiceStatus`))
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `idInvoiceStatus_UNIQUE` ON `VirtualWaiterDB`.`invoiceStatus` (`idInvoiceStatus` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `status_UNIQUE` ON `VirtualWaiterDB`.`invoiceStatus` (`status` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `VirtualWaiterDB`.`jobTiltes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VirtualWaiterDB`.`jobTiltes` (
                                                             `idJobTilte` INT NOT NULL AUTO_INCREMENT,
                                                             `tilte` VARCHAR(20) NOT NULL,
    PRIMARY KEY (`idJobTilte`))
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `idJobTilte_UNIQUE` ON `VirtualWaiterDB`.`jobTiltes` (`idJobTilte` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `jobTilte_UNIQUE` ON `VirtualWaiterDB`.`jobTiltes` (`tilte` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `VirtualWaiterDB`.`orderProduct`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VirtualWaiterDB`.`orderProduct` (
                                                                `idOrderProduct` INT NOT NULL AUTO_INCREMENT,
                                                                `idOrder` INT NOT NULL,
                                                                `idProduct` INT NOT NULL,
                                                                `quantity` INT NOT NULL,
                                                                `cost` INT NOT NULL,
                                                                `value` INT NOT NULL,
                                                                PRIMARY KEY (`idOrderProduct`),
    CONSTRAINT `fk_op_idOrder`
    FOREIGN KEY (`idOrder`)
    REFERENCES `VirtualWaiterDB`.`orders` (`idOrders`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_op_idProduct`
    FOREIGN KEY (`idProduct`)
    REFERENCES `VirtualWaiterDB`.`products` (`idProducts`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `idOrderProducts_UNIQUE` ON `VirtualWaiterDB`.`orderProduct` (`idOrderProduct` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `idOrder_idx` ON `VirtualWaiterDB`.`orderProduct` (`idOrder` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `idProduct_idx` ON `VirtualWaiterDB`.`orderProduct` (`idProduct` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_op_idOrder` ON `VirtualWaiterDB`.`orderProduct` (`idOrder` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_op_idProduct` ON `VirtualWaiterDB`.`orderProduct` (`idProduct` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `VirtualWaiterDB`.`orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VirtualWaiterDB`.`orders` (
                                                          `idOrders` INT NOT NULL AUTO_INCREMENT,
                                                          `idOrderStatus` INT NOT NULL,
                                                          `idEmployee` INT NOT NULL,
                                                          `idTable` INT NOT NULL,
                                                          `idClient` INT NOT NULL,
                                                          `subtotal` INT ZEROFILL NOT NULL,
                                                          `taxes` INT ZEROFILL NOT NULL,
                                                          `total` INT ZEROFILL NOT NULL,
                                                          PRIMARY KEY (`idOrders`),
    CONSTRAINT `fk_ord_idOrderStatus`
    FOREIGN KEY (`idOrderStatus`)
    REFERENCES `VirtualWaiterDB`.`orderStatus` (`idOrderStatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_ord_idEmployee`
    FOREIGN KEY (`idEmployee`)
    REFERENCES `VirtualWaiterDB`.`employees` (`idEmployee`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_ord_idTable`
    FOREIGN KEY (`idTable`)
    REFERENCES `VirtualWaiterDB`.`tables` (`idTable`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_ord_idClient`
    FOREIGN KEY (`idClient`)
    REFERENCES `VirtualWaiterDB`.`clients` (`idClient`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `idOrders_UNIQUE` ON `VirtualWaiterDB`.`orders` (`idOrders` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `idOrderStatus_idx` ON `VirtualWaiterDB`.`orders` (`idOrderStatus` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `idEmployee_idx` ON `VirtualWaiterDB`.`orders` (`idEmployee` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `idTable_idx` ON `VirtualWaiterDB`.`orders` (`idTable` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `idClient_idx` ON `VirtualWaiterDB`.`orders` (`idClient` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_ord_idOrderStatus` ON `VirtualWaiterDB`.`orders` (`idOrderStatus` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_ord_idEmployee` ON `VirtualWaiterDB`.`orders` (`idEmployee` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_ord_idTable` ON `VirtualWaiterDB`.`orders` (`idTable` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_ord_idClient` ON `VirtualWaiterDB`.`orders` (`idClient` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `VirtualWaiterDB`.`orderStatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VirtualWaiterDB`.`orderStatus` (
                                                               `idOrderStatus` INT NOT NULL AUTO_INCREMENT,
                                                               `orderStatuscol` VARCHAR(20) NOT NULL,
    PRIMARY KEY (`idOrderStatus`))
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `idOrderStatus_UNIQUE` ON `VirtualWaiterDB`.`orderStatus` (`idOrderStatus` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `orderStatuscol_UNIQUE` ON `VirtualWaiterDB`.`orderStatus` (`orderStatuscol` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `VirtualWaiterDB`.`paymentMethod`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VirtualWaiterDB`.`paymentMethod` (
                                                                 `idPaymentMethod` INT NOT NULL AUTO_INCREMENT,
                                                                 `method` VARCHAR(45) NOT NULL,
    PRIMARY KEY (`idPaymentMethod`))
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `idPaymentMethod_UNIQUE` ON `VirtualWaiterDB`.`paymentMethod` (`idPaymentMethod` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `method_UNIQUE` ON `VirtualWaiterDB`.`paymentMethod` (`method` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `VirtualWaiterDB`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VirtualWaiterDB`.`products` (
                                                            `idProducts` INT NOT NULL AUTO_INCREMENT,
                                                            `name` VARCHAR(45) NOT NULL,
    `cost` INT ZEROFILL NOT NULL,
    `price` INT ZEROFILL NOT NULL,
    `amount` INT ZEROFILL NOT NULL,
    `description` TEXT NOT NULL,
    `expirationDate` DATE NOT NULL,
    PRIMARY KEY (`idProducts`))
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `idProducts_UNIQUE` ON `VirtualWaiterDB`.`products` (`idProducts` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `name_UNIQUE` ON `VirtualWaiterDB`.`products` (`name` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `description_UNIQUE` ON `VirtualWaiterDB`.`products` (`description` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `VirtualWaiterDB`.`tables`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VirtualWaiterDB`.`tables` (
                                                          `idTable` INT NOT NULL AUTO_INCREMENT,
                                                          `idClient` INT NOT NULL,
                                                          `idEmployee` INT NOT NULL,
                                                          `idTableStatus` INT NOT NULL,
                                                          PRIMARY KEY (`idTable`),
    CONSTRAINT `fk_tab_idClient`
    FOREIGN KEY (`idClient`)
    REFERENCES `VirtualWaiterDB`.`clients` (`idClient`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_tab_idEmployee`
    FOREIGN KEY (`idEmployee`)
    REFERENCES `VirtualWaiterDB`.`employees` (`idEmployee`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_tab_idTableStatus`
    FOREIGN KEY (`idTableStatus`)
    REFERENCES `VirtualWaiterDB`.`tableStatus` (`idTableStatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `idTable_UNIQUE` ON `VirtualWaiterDB`.`tables` (`idTable` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `idClient_idx` ON `VirtualWaiterDB`.`tables` (`idClient` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `idEmployee_idx` ON `VirtualWaiterDB`.`tables` (`idEmployee` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `idTableStatus_idx` ON `VirtualWaiterDB`.`tables` (`idTableStatus` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_tab_idClient` ON `VirtualWaiterDB`.`tables` (`idClient` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_tab_idEmployee` ON `VirtualWaiterDB`.`tables` (`idEmployee` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_tab_idTableStatus` ON `VirtualWaiterDB`.`tables` (`idTableStatus` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `VirtualWaiterDB`.`tableStatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VirtualWaiterDB`.`tableStatus` (
                                                               `idTableStatus` INT NOT NULL AUTO_INCREMENT,
                                                               `status` VARCHAR(20) NOT NULL,
    PRIMARY KEY (`idTableStatus`))
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `idTableStatus_UNIQUE` ON `VirtualWaiterDB`.`tableStatus` (`idTableStatus` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `status_UNIQUE` ON `VirtualWaiterDB`.`tableStatus` (`status` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `VirtualWaiterDB`.`workSchedules`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `VirtualWaiterDB`.`workSchedules` (
                                                                 `idWorkSchedule` INT NOT NULL AUTO_INCREMENT,
                                                                 `schedule` VARCHAR(30) NOT NULL,
    PRIMARY KEY (`idWorkSchedule`))
    ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `idWorkSchedule_UNIQUE` ON `VirtualWaiterDB`.`workSchedules` (`idWorkSchedule` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `schedule_UNIQUE` ON `VirtualWaiterDB`.`workSchedules` (`schedule` ASC) VISIBLE;

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;